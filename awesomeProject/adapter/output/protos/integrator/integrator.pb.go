// Code generated by protoc-gen-go. DO NOT EDIT.
// source: integrator.proto

package integrator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IntegratorResponse_Status int32

const (
	IntegratorResponse_APPROVED IntegratorResponse_Status = 0
	IntegratorResponse_SKIPPED  IntegratorResponse_Status = 1
	IntegratorResponse_DECLINED IntegratorResponse_Status = 2
)

var IntegratorResponse_Status_name = map[int32]string{
	0: "APPROVED",
	1: "SKIPPED",
	2: "DECLINED",
}

var IntegratorResponse_Status_value = map[string]int32{
	"APPROVED": 0,
	"SKIPPED":  1,
	"DECLINED": 2,
}

func (x IntegratorResponse_Status) String() string {
	return proto.EnumName(IntegratorResponse_Status_name, int32(x))
}

func (IntegratorResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc8675db8316c943, []int{1, 0}
}

type IntegratorRequest struct {
	ProductId            int64    `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntegratorRequest) Reset()         { *m = IntegratorRequest{} }
func (m *IntegratorRequest) String() string { return proto.CompactTextString(m) }
func (*IntegratorRequest) ProtoMessage()    {}
func (*IntegratorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8675db8316c943, []int{0}
}

func (m *IntegratorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntegratorRequest.Unmarshal(m, b)
}
func (m *IntegratorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntegratorRequest.Marshal(b, m, deterministic)
}
func (m *IntegratorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntegratorRequest.Merge(m, src)
}
func (m *IntegratorRequest) XXX_Size() int {
	return xxx_messageInfo_IntegratorRequest.Size(m)
}
func (m *IntegratorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IntegratorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IntegratorRequest proto.InternalMessageInfo

func (m *IntegratorRequest) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

type IntegratorResponse struct {
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status               IntegratorResponse_Status `protobuf:"varint,2,opt,name=status,proto3,enum=Integrator.IntegratorResponse_Status" json:"status,omitempty"`
	Reason               string                    `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	CustomCode           string                    `protobuf:"bytes,4,opt,name=custom_code,json=customCode,proto3" json:"custom_code,omitempty"`
	Metadata             map[string]*any.Any       `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *IntegratorResponse) Reset()         { *m = IntegratorResponse{} }
func (m *IntegratorResponse) String() string { return proto.CompactTextString(m) }
func (*IntegratorResponse) ProtoMessage()    {}
func (*IntegratorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc8675db8316c943, []int{1}
}

func (m *IntegratorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntegratorResponse.Unmarshal(m, b)
}
func (m *IntegratorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntegratorResponse.Marshal(b, m, deterministic)
}
func (m *IntegratorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntegratorResponse.Merge(m, src)
}
func (m *IntegratorResponse) XXX_Size() int {
	return xxx_messageInfo_IntegratorResponse.Size(m)
}
func (m *IntegratorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IntegratorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IntegratorResponse proto.InternalMessageInfo

func (m *IntegratorResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IntegratorResponse) GetStatus() IntegratorResponse_Status {
	if m != nil {
		return m.Status
	}
	return IntegratorResponse_APPROVED
}

func (m *IntegratorResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *IntegratorResponse) GetCustomCode() string {
	if m != nil {
		return m.CustomCode
	}
	return ""
}

func (m *IntegratorResponse) GetMetadata() map[string]*any.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterEnum("Integrator.IntegratorResponse_Status", IntegratorResponse_Status_name, IntegratorResponse_Status_value)
	proto.RegisterType((*IntegratorRequest)(nil), "Integrator.IntegratorRequest")
	proto.RegisterType((*IntegratorResponse)(nil), "Integrator.IntegratorResponse")
	proto.RegisterMapType((map[string]*any.Any)(nil), "Integrator.IntegratorResponse.MetadataEntry")
}

func init() {
	proto.RegisterFile("integrator.proto", fileDescriptor_fc8675db8316c943)
}

var fileDescriptor_fc8675db8316c943 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x5d, 0x8b, 0xd4, 0x30,
	0x14, 0xdd, 0xce, 0xec, 0x8e, 0xdb, 0x5b, 0x95, 0x1a, 0x16, 0xa9, 0x03, 0xab, 0xa5, 0x20, 0x14,
	0x91, 0x16, 0xeb, 0x8b, 0x08, 0x3e, 0x8c, 0xdb, 0x82, 0xc5, 0x55, 0x6b, 0x56, 0x7c, 0xf0, 0x65,
	0xc9, 0x36, 0x71, 0x2c, 0xee, 0x24, 0x35, 0xb9, 0x11, 0xea, 0xaf, 0xf6, 0x27, 0xc8, 0xa6, 0x75,
	0x46, 0x11, 0xf5, 0xed, 0xf6, 0x7c, 0x34, 0x39, 0x27, 0x17, 0xc2, 0x4e, 0xa2, 0x58, 0x6b, 0x86,
	0x4a, 0x67, 0xbd, 0x56, 0xa8, 0x08, 0xd4, 0x5b, 0x64, 0x79, 0x67, 0xad, 0xd4, 0xfa, 0x52, 0xe4,
	0x8e, 0xb9, 0xb0, 0x1f, 0x73, 0x26, 0x87, 0x51, 0x96, 0x14, 0x70, 0x6b, 0x27, 0xa4, 0xe2, 0x8b,
	0x15, 0x06, 0xc9, 0x31, 0x40, 0xaf, 0x15, 0xb7, 0x2d, 0x9e, 0x77, 0x3c, 0x9a, 0xc7, 0x5e, 0x3a,
	0xa7, 0xfe, 0x84, 0xd4, 0x3c, 0xf9, 0x3e, 0x03, 0xf2, 0xab, 0xc9, 0xf4, 0x4a, 0x1a, 0x41, 0x08,
	0xec, 0x4b, 0xb6, 0x11, 0x91, 0x17, 0x7b, 0xa9, 0x4f, 0xdd, 0x4c, 0x9e, 0xc1, 0xc2, 0x20, 0x43,
	0x6b, 0xa2, 0x59, 0xec, 0xa5, 0x37, 0x8b, 0xfb, 0xd9, 0xce, 0x98, 0xfd, 0xf9, 0x8f, 0xec, 0xcc,
	0x89, 0xe9, 0x64, 0x22, 0xb7, 0x61, 0xa1, 0x05, 0x33, 0x4a, 0xba, 0x4b, 0xf8, 0x74, 0xfa, 0x22,
	0xf7, 0x20, 0x68, 0xad, 0x41, 0xb5, 0x39, 0x6f, 0x15, 0x17, 0xd1, 0xbe, 0x23, 0x61, 0x84, 0x4e,
	0x14, 0x17, 0xe4, 0x05, 0x1c, 0x6e, 0x04, 0x32, 0xce, 0x90, 0x45, 0x07, 0xf1, 0x3c, 0x0d, 0x8a,
	0x87, 0xff, 0x39, 0xf9, 0xd5, 0x24, 0xaf, 0x24, 0xea, 0x81, 0x6e, 0xdd, 0xcb, 0xb7, 0x70, 0xe3,
	0x37, 0x8a, 0x84, 0x30, 0xff, 0x2c, 0x86, 0x29, 0xe5, 0xd5, 0x48, 0x1e, 0xc0, 0xc1, 0x57, 0x76,
	0x69, 0x85, 0xcb, 0x18, 0x14, 0x47, 0xd9, 0x58, 0x77, 0xf6, 0xb3, 0xee, 0x6c, 0x25, 0x07, 0x3a,
	0x4a, 0x9e, 0xce, 0x9e, 0x78, 0xc9, 0x23, 0x58, 0x8c, 0x39, 0xc9, 0x75, 0x38, 0x5c, 0x35, 0x0d,
	0x7d, 0xf3, 0xbe, 0x2a, 0xc3, 0x3d, 0x12, 0xc0, 0xb5, 0xb3, 0x97, 0x75, 0xd3, 0x54, 0x65, 0xe8,
	0x5d, 0x51, 0x65, 0x75, 0x72, 0x5a, 0xbf, 0xae, 0xca, 0x70, 0x56, 0x70, 0x38, 0x5a, 0x59, 0xfc,
	0xa4, 0x74, 0xf7, 0x4d, 0xbc, 0xd3, 0x4c, 0x1a, 0xd6, 0x62, 0xa7, 0x24, 0x39, 0x05, 0x7f, 0x8b,
	0x93, 0xe3, 0xbf, 0x45, 0x74, 0xaf, 0xba, 0xbc, 0xfb, 0xef, 0x06, 0x92, 0xbd, 0xe7, 0xc9, 0x87,
	0x98, 0x71, 0xd6, 0xa3, 0xd0, 0xb9, 0xb2, 0xd8, 0x5b, 0x1c, 0x37, 0xc6, 0xe4, 0xbb, 0xed, 0xba,
	0x58, 0x38, 0xe8, 0xf1, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xde, 0xb6, 0x21, 0x72, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthorizeTransactionClient is the client API for AuthorizeTransaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorizeTransactionClient interface {
	Authorize(ctx context.Context, in *IntegratorRequest, opts ...grpc.CallOption) (*IntegratorResponse, error)
}

type authorizeTransactionClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthorizeTransactionClient(cc grpc.ClientConnInterface) AuthorizeTransactionClient {
	return &authorizeTransactionClient{cc}
}

func (c *authorizeTransactionClient) Authorize(ctx context.Context, in *IntegratorRequest, opts ...grpc.CallOption) (*IntegratorResponse, error) {
	out := new(IntegratorResponse)
	err := c.cc.Invoke(ctx, "/Integrator.AuthorizeTransaction/Authorize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorizeTransactionServer is the server API for AuthorizeTransaction service.
type AuthorizeTransactionServer interface {
	Authorize(context.Context, *IntegratorRequest) (*IntegratorResponse, error)
}

// UnimplementedAuthorizeTransactionServer can be embedded to have forward compatible implementations.
type UnimplementedAuthorizeTransactionServer struct {
}

func (*UnimplementedAuthorizeTransactionServer) Authorize(ctx context.Context, req *IntegratorRequest) (*IntegratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorize not implemented")
}

func RegisterAuthorizeTransactionServer(s *grpc.Server, srv AuthorizeTransactionServer) {
	s.RegisterService(&_AuthorizeTransaction_serviceDesc, srv)
}

func _AuthorizeTransaction_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntegratorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizeTransactionServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Integrator.AuthorizeTransaction/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizeTransactionServer).Authorize(ctx, req.(*IntegratorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthorizeTransaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Integrator.AuthorizeTransaction",
	HandlerType: (*AuthorizeTransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorize",
			Handler:    _AuthorizeTransaction_Authorize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "integrator.proto",
}
